{"id":"app/data/Hasher.js","dependencies":[{"name":"C:\\Users\\Rodrigo\\Documents\\GitHub\\Propped-Node-API\\package.json","includedInParent":true,"mtime":1601776173274}],"generated":{"js":"const bcrypt = require(\"bcrypt\");\n\nconst saltRounds = 10;\n\nconst Hasher = function () {};\n\nHasher.generateCode = () => {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < 30; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n};\n\nHasher.hashPassword = (pass, fn) => {\n  bcrypt.genSalt(saltRounds, function (err, salt) {\n    bcrypt.hash(pass, salt, function (err, hash) {\n      if (err) {\n        throw new Error(\"Error while hashing.\");\n      } else {\n        fn(hash);\n      }\n    });\n  });\n};\n\nHasher.comparePassword = (pass, hash, fn) => {\n  bcrypt.compare(pass, hash, function (err, result) {\n    if (err) {\n      throw new Error(\"Error when comparing hashes.\");\n    } else {\n      fn(result);\n    }\n  });\n};\n\nmodule.exports = Hasher;"},"sourceMaps":null,"error":null,"hash":"580032a1093af7d1973935895c0fa23e","cacheData":{"env":{}}}